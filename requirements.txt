The idea is to prototype a Lost and Found system for an airport to be used as a REST API, where we can manage and search for lost products. An agent at the airport is able to list / create and delete products from the system, while a passenger is able to search for his lost product (e.g. by describing the product). A list of rough steps in priority order:

    as an agent, list/create/delete products;
    as a passenger, search for a product by keywords (e.g. type of product, brand, color, etc) and lost time (e.g. "2023-01-01T10:30:00Z");
    extend the search endpoint to use a message instead of keywords (e.g. 'I lost my Samsung S4 phone'). The lost time should still be a different input, no need to parse from the message;
    simple airport agent authentication;
    prepare a postman collection to interact with the API;
    extend on the use case logic if you feel necessary / relevant.

Make your own assumptions on what database models and code structure work best for the use case. If you see you don't have time to develop everything, write in pseudo code or just plan what your approach would be for the remaining points for us to discuss.

The evaluation of the exercise will be based on the following criteria:

    approach used for solving the real world use-case;
    application architecture;
    code quality and clarity;
    input validation and security;
    quality assurance and testing.


